{
  "contractName": "SaverProxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tub",
          "type": "address"
        },
        {
          "name": "_cdpId",
          "type": "uint256"
        }
      ],
      "name": "unwind",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf966d975"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tub",
          "type": "address"
        },
        {
          "name": "_cdpId",
          "type": "uint256"
        },
        {
          "name": "_marketplace",
          "type": "address"
        }
      ],
      "name": "createUserProxyAndTransfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa40aaf7c"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506126d7806100206000396000f3fe6080604052600436106200004f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063a40aaf7c1462000054578063f966d97514620000d3575b600080fd5b3480156200006157600080fd5b50620000d1600480360360608110156200007a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000132565b005b348015620000e057600080fd5b506200013060048036036040811015620000f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000422565b005b60008390508073ffffffffffffffffffffffffffffffffffffffff1663de5f5517846001026040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082815260200191505060206040518083038186803b158015620001a857600080fd5b505afa158015620001bd573d6000803e3d6000fd5b505050506040513d6020811015620001d457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562000288576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5468652063616c6c6572206d7573742062652074686520636470206f776e657281525060200191505060405180910390fd5b60008383303362000298620007dd565b808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001945050505050604051809103906000f08015801562000358573d6000803e3d6000fd5b5090508173ffffffffffffffffffffffffffffffffffffffff1663baa8529c85600102836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b1580156200040257600080fd5b505af115801562000417573d6000803e3d6000fd5b505050505050505050565b600082905060006200043362000572565b90508173ffffffffffffffffffffffffffffffffffffffff1663a5cd184e84600102836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b158015620004b057600080fd5b505af1158015620004c5573d6000803e3d6000fd5b505050506000620004d56200057c565b90508273ffffffffffffffffffffffffffffffffffffffff166373b3810185600102836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182815260200192505050600060405180830381600087803b1580156200055257600080fd5b505af115801562000567573d6000803e3d6000fd5b505050505050505050565b6000612710905090565b600080600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9050600073c4375b7de8af5a38a93548eb8453a498222c4ff290506000737e6b8b9510d71bf8ef0f893902ebb9c865eef4df90508073ffffffffffffffffffffffffffffffffffffffff1663809a9e558484346040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604080518083038186803b1580156200069f57600080fd5b505afa158015620006b4573d6000803e3d6000fd5b505050506040513d6040811015620006cb57600080fd5b81019080805190602001909291908051906020019092919050505090508094505060008173ffffffffffffffffffffffffffffffffffffffff16637a2a04563485886040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001925050506020604051808303818588803b1580156200079257600080fd5b505af1158015620007a7573d6000803e3d6000fd5b50505050506040513d6020811015620007bf57600080fd5b81019080805190602001909291905050509050809550505050505090565b604051611ebd80620007ef8339019056fe608060405273448a5065aebb8e423f0896e6c5d525c040f59af3600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b5060405160808062001ebd833981018060405260808110156200008857600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050600033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a2620001578162000498640100000000026401000000009004565b15156200016357600080fd5b5080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360038190555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073aaf64bfcc32d0f15873a02163e7e500671a4ffcd90508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a71937147b55deb8a530c7229c442fd3f31b7db27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156200031f57600080fd5b505af115801562000334573d6000803e3d6000fd5b505050506040513d60208110156200034b57600080fd5b810190808051906020019092919050505050600073c4375b7de8af5a38a93548eb8453a498222c4ff290508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b373a71937147b55deb8a530c7229c442fd3f31b7db27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156200044e57600080fd5b505af115801562000463573d6000803e3d6000fd5b505050506040513d60208110156200047a57600080fd5b810190808051906020019092919050505050505050505050620008a1565b6000620004d9336000357fffffffff000000000000000000000000000000000000000000000000000000001662000623640100000000026401000000009004565b1515620004e557600080fd5b6000806004359150602435905080823373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a4600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515620005d757600080fd5b83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600192505050919050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156200066457600190506200089b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620006c557600190506200089b565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200072657600090506200089b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001935050505060206040518083038186803b1580156200085b57600080fd5b505afa15801562000870573d6000803e3d6000fd5b505050506040513d60208110156200088757600080fd5b810190808051906020019092919050505090505b92915050565b61160c80620008b16000396000f3fe6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100c75780631cff79cd146101185780631f6a1eb9146102075780633d140d21146103a05780633e3cc357146103fd5780634a1a066b1461044e57806360c7d295146104795780637a9e5e4b146104d05780638da5cb5b14610521578063948f507614610578578063bf7e214f146105d4578063d8b964e61461062b578063e475949314610694575b005b3480156100d357600080fd5b50610116600480360360208110156100ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106e5565b005b6101f16004803603604081101561012e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561016b57600080fd5b82018360208201111561017d57600080fd5b8035906020019184600183028401116401000000008311171561019f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107c7565b6040518082815260200191505060405180910390f35b6103576004803603604081101561021d57600080fd5b810190808035906020019064010000000081111561023a57600080fd5b82018360208201111561024c57600080fd5b8035906020019184600183028401116401000000008311171561026e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102d157600080fd5b8201836020820111156102e357600080fd5b8035906020019184600183028401116401000000008311171561030557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610927565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156103ac57600080fd5b506103fb600480360360408110156103c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610bd7565b005b34801561040957600080fd5b5061044c6004803603602081101561042057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c6b565b005b34801561045a57600080fd5b50610463610d86565b6040518082815260200191505060405180910390f35b34801561048557600080fd5b5061048e610d8c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104dc57600080fd5b5061051f600480360360208110156104f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610db2565b005b34801561052d57600080fd5b50610536610e92565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105ba6004803603602081101561058e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eb8565b604051808215151515815260200191505060405180910390f35b3480156105e057600080fd5b506105e9611030565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063757600080fd5b5061067a6004803603602081101561064e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611055565b604051808215151515815260200191505060405180910390f35b3480156106a057600080fd5b506106e3600480360360208110156106b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611075565b005b610713336000357fffffffff000000000000000000000000000000000000000000000000000000001661136b565b151561071e57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9460405160405180910390a250565b60006107f7336000357fffffffff000000000000000000000000000000000000000000000000000000001661136b565b151561080257600080fd5b6000806004359150602435905080823373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a4600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515156108f357600080fd5b60206000855160208701886113885a03f460005193508015600181146109185761091d565b600080fd5b5050505092915050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638bf4515c856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109d45780820151818401526020810190506109b9565b50505050905090810190601f168015610a015780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b158015610a1e57600080fd5b505afa158015610a32573d6000803e3d6000fd5b505050506040513d6020811015610a4857600080fd5b81019080805190602001909291905050509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bc457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ed0c3b2856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b3a578082015181840152602081019050610b1f565b50505050905090810190601f168015610b675780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610b8657600080fd5b505af1158015610b9a573d6000803e3d6000fd5b505050506040513d6020811015610bb057600080fd5b810190808051906020019092919050505091505b610bce82846107c7565b90509250929050565b610c05336000357fffffffff000000000000000000000000000000000000000000000000000000001661136b565b1515610c1057600080fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610c99336000357fffffffff000000000000000000000000000000000000000000000000000000001661136b565b1515610ca457600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f966d975826003546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b5050505050565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610de0336000357fffffffff000000000000000000000000000000000000000000000000000000001661136b565b1515610deb57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada460405160405180910390a250565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610ee8336000357fffffffff000000000000000000000000000000000000000000000000000000001661136b565b1515610ef357600080fd5b6000806004359150602435905080823373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a4600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515610fe457600080fd5b83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600192505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611121575060011515600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b15156111bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f4f6e6c7920746865206f776e6572206f7220616e20617070726f76656420616481526020017f64726573732063616e207472616e73666572000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001807f53746f702074686520757365722066726f6d207472616e73666572696e67207481526020017f68652063757020696e746f206120656d7074792061646472657373000000000081525060400191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663baa8529c600354600102836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561135057600080fd5b505af1158015611364573d6000803e3d6000fd5b5050505050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113aa57600190506115da565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561140957600190506115da565b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561146857600090506115da565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b70096138430856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001935050505060206040518083038186803b15801561159c57600080fd5b505afa1580156115b0573d6000803e3d6000fd5b505050506040513d60208110156115c657600080fd5b810190808051906020019092919050505090505b9291505056fea165627a7a723058209b76c9556e73bb631b4f298433f0c94c29934f2839f27ba578e2ef0b4c5eaadb0029a165627a7a723058207f6d35845b2d51db1d3ac4341bd865421647bb99a8a95f3e641f00f8426c508f0029",
  "deployedBytecode": "",
  "sourceMap": "146:1732:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;146:1732:9;;;;;;;",
  "deployedSourceMap": "146:1732:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:389;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1487:389:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1487:389:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;172:329;;8:9:-1;5:2;;;30:1;27;20:12;5:2;172:329:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;172:329:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:389;1589:16;1621:4;1589:37;;1659:3;:7;;;1675:6;1667:15;;1659:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1659:24:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1659:24:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1659:24:9;;;;;;;;;;;;;;;;1645:38;;:10;:38;;;1637:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1731:18;1766:6;1774:12;1796:4;1803:10;1752:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1752:62:9;1731:83;;1825:3;:8;;;1842:6;1834:15;;1859:8;1825:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1825:44:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1825:44:9;;;;1487:389;;;;;:::o;172:329::-;232:16;264:4;232:37;;280:18;301:22;:20;:22::i;:::-;280:43;;334:3;:8;;;351:6;343:15;;360:13;334:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:40:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;334:40:9;;;;385:14;402:18;:16;:18::i;:::-;385:35;;458:3;:8;;;475:6;467:15;;484:9;458:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;458:36:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;458:36:9;;;;172:329;;;;;:::o;1317:89::-;1371:4;1394:5;1387:12;;1317:89;:::o;550:690::-;596:4;613:12;635:23;667:42;635:75;;720:14;743:42;720:66;;813:45;888:42;813:118;;972:18;:34;;;1007:17;1026:8;1036:9;972:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;972:74:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;972:74:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;972:74:9;;;;;;;;;;;;;;;;;;;;;;;;;958:88;;;;;;1116:15;1134:18;:35;;;1176:9;1187:8;1197:7;1134:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:71:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1134:71:9;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1134:71:9;;;;;;;;;;;;;;;;1116:89;;1223:10;1216:17;;;;;;;550:690;:::o;146:1732::-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./CDPInterface.sol\";\nimport \"./ERC20.sol\";\nimport \"./KyberNetworkProxyInterface.sol\";\nimport \"./UserProxy.sol\";\n\ncontract SaverProxy {\n    function unwind(address _tub, uint _cdpId) public {\n        CDPInterface cdp = CDPInterface(_tub);\n\n        uint maxCollateral = getMaxFreeCollateral();\n\n        cdp.free(bytes32(_cdpId), maxCollateral);\n\n        uint daiAmount = swapEtherToToken();\n\n        //User needs maker\n        cdp.wipe(bytes32(_cdpId), daiAmount);\n    }\n\n    //TODO: watch out for gas price limits\n    function swapEtherToToken () internal returns(uint) {\n\n        uint minRate;\n        ERC20 ETH_TOKEN_ADDRESS = ERC20(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE);\n        ERC20 daiToken = ERC20(0xC4375B7De8af5a38a93548eb8453a498222C4fF2); //KOVAN ADDRESS\n\n        KyberNetworkProxyInterface _kyberNetworkProxy = KyberNetworkProxyInterface(0x7e6b8b9510D71BF8EF0f893902EbB9C865eEF4Df); //KOVAN ADDRESS\n\n        (, minRate) = _kyberNetworkProxy.getExpectedRate(ETH_TOKEN_ADDRESS, daiToken, msg.value);\n\n        //will send back tokens to this contract's address\n        uint destAmount = _kyberNetworkProxy.swapEtherToToken.value(msg.value)(daiToken, minRate);\n\n        return destAmount;\n    }\n\n    //TODO: calculate what is the max amount of collateral you can get\n    function getMaxFreeCollateral() pure internal returns(uint) {\n        return 10000;\n    }\n\n    ///@notice Creates a new UserProxy and transfer and existing cdp to it\n    function createUserProxyAndTransfer(address _tub, uint _cdpId, address _marketplace) public {\n        CDPInterface cdp = CDPInterface(_tub);\n\n        require(msg.sender == cdp.lad(bytes32(_cdpId)), \"The caller must be the cdp owner\");\n\n        UserProxy newProxy = new UserProxy(_cdpId, _marketplace, address(this), msg.sender);\n\n        cdp.give(bytes32(_cdpId), address(newProxy));\n    }\n}",
  "sourcePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/SaverProxy.sol",
  "ast": {
    "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/SaverProxy.sol",
    "exportedSymbols": {
      "SaverProxy": [
        990
      ]
    },
    "id": 991,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 830,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/CDPInterface.sol",
        "file": "./CDPInterface.sol",
        "id": 831,
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 60,
        "src": "25:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 832,
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 465,
        "src": "54:21:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/KyberNetworkProxyInterface.sol",
        "file": "./KyberNetworkProxyInterface.sol",
        "id": 833,
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 545,
        "src": "76:42:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/UserProxy.sol",
        "file": "./UserProxy.sol",
        "id": 834,
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 1155,
        "src": "119:25:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1154
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 990,
        "linearizedBaseContracts": [
          990
        ],
        "name": "SaverProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "222:279:9",
              "statements": [
                {
                  "assignments": [
                    842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 842,
                      "name": "cdp",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "232:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CDPInterface_$59",
                        "typeString": "contract CDPInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 841,
                        "name": "CDPInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 59,
                        "src": "232:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 846,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 844,
                        "name": "_tub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "264:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 843,
                      "name": "CDPInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "251:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CDPInterface_$59_$",
                        "typeString": "type(contract CDPInterface)"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "251:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CDPInterface_$59",
                      "typeString": "contract CDPInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "232:37:9"
                },
                {
                  "assignments": [
                    848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 848,
                      "name": "maxCollateral",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "280:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 847,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "280:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 851,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 849,
                      "name": "getMaxFreeCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "301:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "301:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "280:43:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 856,
                            "name": "_cdpId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "351:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "343:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "343:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 858,
                        "name": "maxCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "360:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 852,
                        "name": "cdp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "334:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "free",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "334:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256) external"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "334:40:9"
                },
                {
                  "assignments": [
                    862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 862,
                      "name": "daiAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "385:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 861,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "385:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 865,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 863,
                      "name": "swapEtherToToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "402:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "402:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "385:35:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 870,
                            "name": "_cdpId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "475:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "467:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "467:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 872,
                        "name": "daiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "484:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 866,
                        "name": "cdp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "458:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wipe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "458:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256) external"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "458:36:9"
                }
              ]
            },
            "documentation": null,
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwind",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "name": "_tub",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "188:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "name": "_cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "202:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:27:9"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:0:9"
            },
            "scope": 990,
            "src": "172:329:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 927,
              "nodeType": "Block",
              "src": "602:638:9",
              "statements": [
                {
                  "assignments": [
                    882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 882,
                      "name": "minRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "613:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 881,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "613:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "613:12:9"
                },
                {
                  "assignments": [
                    885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 885,
                      "name": "ETH_TOKEN_ADDRESS",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "635:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$464",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 884,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 464,
                        "src": "635:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$464",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 889,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "667:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 886,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "661:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$464_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "661:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$464",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "635:75:9"
                },
                {
                  "assignments": [
                    891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 891,
                      "name": "daiToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "720:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$464",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 890,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 464,
                        "src": "720:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$464",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 895,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307843343337354237446538616635613338613933353438656238343533613439383232324334664632",
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "743:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0xC4375B7De8af5a38a93548eb8453a498222C4fF2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 892,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "737:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$464_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$464",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "720:66:9"
                },
                {
                  "assignments": [
                    897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 897,
                      "name": "_kyberNetworkProxy",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "813:45:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                        "typeString": "contract KyberNetworkProxyInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 896,
                        "name": "KyberNetworkProxyInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 544,
                        "src": "813:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                          "typeString": "contract KyberNetworkProxyInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 901,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307837653662386239353130443731424638454630663839333930324562423943383635654546344466",
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "888:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0x7e6b8b9510D71BF8EF0f893902EbB9C865eEF4Df"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 898,
                      "name": "KyberNetworkProxyInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "861:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_KyberNetworkProxyInterface_$544_$",
                        "typeString": "type(contract KyberNetworkProxyInterface)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:70:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                      "typeString": "contract KyberNetworkProxyInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "813:118:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        null,
                        {
                          "argumentTypes": null,
                          "id": 902,
                          "name": "minRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "961:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 903,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "958:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 906,
                          "name": "ETH_TOKEN_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 885,
                          "src": "1007:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$464",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 907,
                          "name": "daiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "1026:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$464",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 908,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1169,
                            "src": "1036:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1036:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$464",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$464",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 904,
                          "name": "_kyberNetworkProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 897,
                          "src": "972:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                            "typeString": "contract KyberNetworkProxyInterface"
                          }
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getExpectedRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 513,
                        "src": "972:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$464_$_t_contract$_ERC20_$464_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "972:74:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "958:88:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "958:88:9"
                },
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "name": "destAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "1116:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1116:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 924,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 921,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "1187:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$464",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 922,
                        "name": "minRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "1197:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$464",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 918,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1169,
                            "src": "1176:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1176:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 915,
                            "name": "_kyberNetworkProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "1134:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                              "typeString": "contract KyberNetworkProxyInterface"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "swapEtherToToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 543,
                          "src": "1134:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$464_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,uint256) payable external returns (uint256)"
                          }
                        },
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1134:41:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_ERC20_$464_$_t_uint256_$returns$_t_uint256_$value_$",
                          "typeString": "function (uint256) returns (function (contract ERC20,uint256) payable external returns (uint256))"
                        }
                      },
                      "id": 920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1134:52:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$464_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (contract ERC20,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:71:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1116:89:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 925,
                    "name": "destAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 914,
                    "src": "1223:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 926,
                  "nodeType": "Return",
                  "src": "1216:17:9"
                }
              ]
            },
            "documentation": null,
            "id": 928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapEtherToToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:2:9"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "596:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:6:9"
            },
            "scope": 990,
            "src": "550:690:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "1377:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3130303030",
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1394:5:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "functionReturnParameters": 932,
                  "id": 934,
                  "nodeType": "Return",
                  "src": "1387:12:9"
                }
              ]
            },
            "documentation": null,
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxFreeCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:9"
            },
            "returnParameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 931,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "1371:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1370:6:9"
            },
            "scope": 990,
            "src": "1317:89:9",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "1579:297:9",
              "statements": [
                {
                  "assignments": [
                    946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 946,
                      "name": "cdp",
                      "nodeType": "VariableDeclaration",
                      "scope": 988,
                      "src": "1589:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CDPInterface_$59",
                        "typeString": "contract CDPInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 945,
                        "name": "CDPInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 59,
                        "src": "1589:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 950,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 948,
                        "name": "_tub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "1621:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 947,
                      "name": "CDPInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1608:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CDPInterface_$59_$",
                        "typeString": "type(contract CDPInterface)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CDPInterface_$59",
                      "typeString": "contract CDPInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1589:37:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 952,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1169,
                            "src": "1645:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1645:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 957,
                                  "name": "_cdpId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 940,
                                  "src": "1675:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1667:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": "bytes32"
                              },
                              "id": 958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1667:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "cdp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "1659:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CDPInterface_$59",
                                "typeString": "contract CDPInterface"
                              }
                            },
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lad",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "1659:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1659:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1645:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652063616c6c6572206d7573742062652074686520636470206f776e6572",
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:34:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89e437b87d3999498ad15c6d09108d250d0cf9f76b40c9748e34b36508b2065",
                          "typeString": "literal_string \"The caller must be the cdp owner\""
                        },
                        "value": "The caller must be the cdp owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89e437b87d3999498ad15c6d09108d250d0cf9f76b40c9748e34b36508b2065",
                          "typeString": "literal_string \"The caller must be the cdp owner\""
                        }
                      ],
                      "id": 951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1172,
                        1173
                      ],
                      "referencedDeclaration": 1173,
                      "src": "1637:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:83:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:83:9"
                },
                {
                  "assignments": [
                    965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 965,
                      "name": "newProxy",
                      "nodeType": "VariableDeclaration",
                      "scope": 988,
                      "src": "1731:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserProxy_$1154",
                        "typeString": "contract UserProxy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 964,
                        "name": "UserProxy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1154,
                        "src": "1731:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserProxy_$1154",
                          "typeString": "contract UserProxy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 968,
                        "name": "_cdpId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "1766:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 969,
                        "name": "_marketplace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "1774:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 971,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "1796:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SaverProxy_$990",
                              "typeString": "contract SaverProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SaverProxy_$990",
                              "typeString": "contract SaverProxy"
                            }
                          ],
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1788:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1788:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 973,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1169,
                          "src": "1803:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1803:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1752:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_UserProxy_$1154_$",
                        "typeString": "function (uint256,address,address,address) returns (contract UserProxy)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 966,
                        "name": "UserProxy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1154,
                        "src": "1756:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserProxy_$1154",
                          "typeString": "contract UserProxy"
                        }
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1752:62:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserProxy_$1154",
                      "typeString": "contract UserProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1731:83:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 981,
                            "name": "_cdpId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 940,
                            "src": "1842:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1834:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1834:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 984,
                            "name": "newProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "1859:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserProxy_$1154",
                              "typeString": "contract UserProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UserProxy_$1154",
                              "typeString": "contract UserProxy"
                            }
                          ],
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1851:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1851:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 977,
                        "name": "cdp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "1825:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "id": 979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "give",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "1825:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:44:9"
                }
              ]
            },
            "documentation": "@notice Creates a new UserProxy and transfer and existing cdp to it",
            "id": 989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUserProxyAndTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 938,
                  "name": "_tub",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1523:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 940,
                  "name": "_cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1537:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 942,
                  "name": "_marketplace",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1550:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1522:49:9"
            },
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:9"
            },
            "scope": 990,
            "src": "1487:389:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 991,
        "src": "146:1732:9"
      }
    ],
    "src": "0:1878:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/SaverProxy.sol",
    "exportedSymbols": {
      "SaverProxy": [
        990
      ]
    },
    "id": 991,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 830,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/CDPInterface.sol",
        "file": "./CDPInterface.sol",
        "id": 831,
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 60,
        "src": "25:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 832,
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 465,
        "src": "54:21:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/KyberNetworkProxyInterface.sol",
        "file": "./KyberNetworkProxyInterface.sol",
        "id": 833,
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 545,
        "src": "76:42:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nenadpalinkasevic/Desktop/blockchain/cdpsaver/contracts/UserProxy.sol",
        "file": "./UserProxy.sol",
        "id": 834,
        "nodeType": "ImportDirective",
        "scope": 991,
        "sourceUnit": 1155,
        "src": "119:25:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1154
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 990,
        "linearizedBaseContracts": [
          990
        ],
        "name": "SaverProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 875,
              "nodeType": "Block",
              "src": "222:279:9",
              "statements": [
                {
                  "assignments": [
                    842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 842,
                      "name": "cdp",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "232:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CDPInterface_$59",
                        "typeString": "contract CDPInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 841,
                        "name": "CDPInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 59,
                        "src": "232:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 846,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 844,
                        "name": "_tub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "264:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 843,
                      "name": "CDPInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "251:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CDPInterface_$59_$",
                        "typeString": "type(contract CDPInterface)"
                      }
                    },
                    "id": 845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "251:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CDPInterface_$59",
                      "typeString": "contract CDPInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "232:37:9"
                },
                {
                  "assignments": [
                    848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 848,
                      "name": "maxCollateral",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "280:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 847,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "280:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 851,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 849,
                      "name": "getMaxFreeCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 936,
                      "src": "301:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "301:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "280:43:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 856,
                            "name": "_cdpId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "351:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "343:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "343:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 858,
                        "name": "maxCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "360:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 852,
                        "name": "cdp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "334:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "free",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "334:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256) external"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "334:40:9"
                },
                {
                  "assignments": [
                    862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 862,
                      "name": "daiAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 875,
                      "src": "385:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 861,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "385:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 865,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 863,
                      "name": "swapEtherToToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "402:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "402:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "385:35:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 870,
                            "name": "_cdpId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 838,
                            "src": "475:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "467:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "467:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 872,
                        "name": "daiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "484:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 866,
                        "name": "cdp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "458:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wipe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "458:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256) external"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "458:36:9"
                }
              ]
            },
            "documentation": null,
            "id": 876,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwind",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "name": "_tub",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "188:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "name": "_cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "202:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:27:9"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "222:0:9"
            },
            "scope": 990,
            "src": "172:329:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 927,
              "nodeType": "Block",
              "src": "602:638:9",
              "statements": [
                {
                  "assignments": [
                    882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 882,
                      "name": "minRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "613:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 881,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "613:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 883,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "613:12:9"
                },
                {
                  "assignments": [
                    885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 885,
                      "name": "ETH_TOKEN_ADDRESS",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "635:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$464",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 884,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 464,
                        "src": "635:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$464",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 889,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "667:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 886,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "661:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$464_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "661:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$464",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "635:75:9"
                },
                {
                  "assignments": [
                    891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 891,
                      "name": "daiToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "720:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$464",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 890,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 464,
                        "src": "720:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$464",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 895,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307843343337354237446538616635613338613933353438656238343533613439383232324334664632",
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "743:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0xC4375B7De8af5a38a93548eb8453a498222C4fF2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 892,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "737:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$464_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "737:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$464",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "720:66:9"
                },
                {
                  "assignments": [
                    897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 897,
                      "name": "_kyberNetworkProxy",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "813:45:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                        "typeString": "contract KyberNetworkProxyInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 896,
                        "name": "KyberNetworkProxyInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 544,
                        "src": "813:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                          "typeString": "contract KyberNetworkProxyInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 901,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307837653662386239353130443731424638454630663839333930324562423943383635654546344466",
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "888:42:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0x7e6b8b9510D71BF8EF0f893902EbB9C865eEF4Df"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 898,
                      "name": "KyberNetworkProxyInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "861:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_KyberNetworkProxyInterface_$544_$",
                        "typeString": "type(contract KyberNetworkProxyInterface)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:70:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                      "typeString": "contract KyberNetworkProxyInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "813:118:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        null,
                        {
                          "argumentTypes": null,
                          "id": 902,
                          "name": "minRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 882,
                          "src": "961:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 903,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "958:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 906,
                          "name": "ETH_TOKEN_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 885,
                          "src": "1007:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$464",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 907,
                          "name": "daiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "1026:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$464",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 908,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1169,
                            "src": "1036:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1036:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$464",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$464",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 904,
                          "name": "_kyberNetworkProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 897,
                          "src": "972:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                            "typeString": "contract KyberNetworkProxyInterface"
                          }
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getExpectedRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 513,
                        "src": "972:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$464_$_t_contract$_ERC20_$464_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (contract ERC20,contract ERC20,uint256) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "972:74:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "958:88:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 912,
                  "nodeType": "ExpressionStatement",
                  "src": "958:88:9"
                },
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "name": "destAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 927,
                      "src": "1116:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1116:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 924,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 921,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "1187:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$464",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 922,
                        "name": "minRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 882,
                        "src": "1197:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$464",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 918,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1169,
                            "src": "1176:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1176:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 915,
                            "name": "_kyberNetworkProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "1134:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_KyberNetworkProxyInterface_$544",
                              "typeString": "contract KyberNetworkProxyInterface"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "swapEtherToToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 543,
                          "src": "1134:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$464_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,uint256) payable external returns (uint256)"
                          }
                        },
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1134:41:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_contract$_ERC20_$464_$_t_uint256_$returns$_t_uint256_$value_$",
                          "typeString": "function (uint256) returns (function (contract ERC20,uint256) payable external returns (uint256))"
                        }
                      },
                      "id": 920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1134:52:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_contract$_ERC20_$464_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (contract ERC20,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:71:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1116:89:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 925,
                    "name": "destAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 914,
                    "src": "1223:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 926,
                  "nodeType": "Return",
                  "src": "1216:17:9"
                }
              ]
            },
            "documentation": null,
            "id": 928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapEtherToToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:2:9"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 928,
                  "src": "596:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "595:6:9"
            },
            "scope": 990,
            "src": "550:690:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "1377:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3130303030",
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1394:5:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "functionReturnParameters": 932,
                  "id": 934,
                  "nodeType": "Return",
                  "src": "1387:12:9"
                }
              ]
            },
            "documentation": null,
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxFreeCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:9"
            },
            "returnParameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 931,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "1371:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 930,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1370:6:9"
            },
            "scope": 990,
            "src": "1317:89:9",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "1579:297:9",
              "statements": [
                {
                  "assignments": [
                    946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 946,
                      "name": "cdp",
                      "nodeType": "VariableDeclaration",
                      "scope": 988,
                      "src": "1589:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CDPInterface_$59",
                        "typeString": "contract CDPInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 945,
                        "name": "CDPInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 59,
                        "src": "1589:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 950,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 948,
                        "name": "_tub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "1621:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 947,
                      "name": "CDPInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1608:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CDPInterface_$59_$",
                        "typeString": "type(contract CDPInterface)"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CDPInterface_$59",
                      "typeString": "contract CDPInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1589:37:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 952,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1169,
                            "src": "1645:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1645:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 957,
                                  "name": "_cdpId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 940,
                                  "src": "1675:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1667:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": "bytes32"
                              },
                              "id": 958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1667:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "cdp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "1659:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CDPInterface_$59",
                                "typeString": "contract CDPInterface"
                              }
                            },
                            "id": 955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lad",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "1659:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1659:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1645:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652063616c6c6572206d7573742062652074686520636470206f776e6572",
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1685:34:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89e437b87d3999498ad15c6d09108d250d0cf9f76b40c9748e34b36508b2065",
                          "typeString": "literal_string \"The caller must be the cdp owner\""
                        },
                        "value": "The caller must be the cdp owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89e437b87d3999498ad15c6d09108d250d0cf9f76b40c9748e34b36508b2065",
                          "typeString": "literal_string \"The caller must be the cdp owner\""
                        }
                      ],
                      "id": 951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1172,
                        1173
                      ],
                      "referencedDeclaration": 1173,
                      "src": "1637:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:83:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:83:9"
                },
                {
                  "assignments": [
                    965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 965,
                      "name": "newProxy",
                      "nodeType": "VariableDeclaration",
                      "scope": 988,
                      "src": "1731:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UserProxy_$1154",
                        "typeString": "contract UserProxy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 964,
                        "name": "UserProxy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1154,
                        "src": "1731:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserProxy_$1154",
                          "typeString": "contract UserProxy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 976,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 968,
                        "name": "_cdpId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "1766:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 969,
                        "name": "_marketplace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "1774:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 971,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "1796:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SaverProxy_$990",
                              "typeString": "contract SaverProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SaverProxy_$990",
                              "typeString": "contract SaverProxy"
                            }
                          ],
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1788:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1788:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 973,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1169,
                          "src": "1803:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1803:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1752:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_UserProxy_$1154_$",
                        "typeString": "function (uint256,address,address,address) returns (contract UserProxy)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 966,
                        "name": "UserProxy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1154,
                        "src": "1756:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UserProxy_$1154",
                          "typeString": "contract UserProxy"
                        }
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1752:62:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UserProxy_$1154",
                      "typeString": "contract UserProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1731:83:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 981,
                            "name": "_cdpId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 940,
                            "src": "1842:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1834:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1834:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 984,
                            "name": "newProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "1859:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UserProxy_$1154",
                              "typeString": "contract UserProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UserProxy_$1154",
                              "typeString": "contract UserProxy"
                            }
                          ],
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1851:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1851:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 977,
                        "name": "cdp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "1825:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CDPInterface_$59",
                          "typeString": "contract CDPInterface"
                        }
                      },
                      "id": 979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "give",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "1825:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "ExpressionStatement",
                  "src": "1825:44:9"
                }
              ]
            },
            "documentation": "@notice Creates a new UserProxy and transfer and existing cdp to it",
            "id": 989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUserProxyAndTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 938,
                  "name": "_tub",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1523:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 940,
                  "name": "_cdpId",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1537:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 942,
                  "name": "_marketplace",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "1550:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1522:49:9"
            },
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:9"
            },
            "scope": 990,
            "src": "1487:389:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 991,
        "src": "146:1732:9"
      }
    ],
    "src": "0:1878:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x589489C8c068C0108d619CC0383cF8B5844fbdA1",
      "transactionHash": "0x58011a14f036ef2ac93c91bc4a824c523f9b0844acb1d707780c2a2f2bbbeebe"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-21T16:58:04.975Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "createUserProxyAndTransfer(address,uint256,address)": {
        "notice": "Creates a new UserProxy and transfer and existing cdp to it"
      }
    }
  }
}